"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import modelentity as shared_modelentity
from typing import Optional


@dataclasses.dataclass
class ListAllModelsSecurity:
    
    bearer: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})
    bearer1: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class ListAllModelsRequest:
    
    return_in_object: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'returnInObject', 'style': 'form', 'explode': True }})
    r"""Whether to return the sample in the response as an object. Will return array if false."""
    

@dataclasses.dataclass
class ListAllModelsResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    model_entities: Optional[list[shared_modelentity.ModelEntity]] = dataclasses.field(default=None)
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    