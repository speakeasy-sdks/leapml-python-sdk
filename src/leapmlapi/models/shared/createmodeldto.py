"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from leapmlapi import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateModelDto:
    
    subject_keyword: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjectKeyword') }})
    r"""This is the keyword you will use during inference to trigger the specific styles."""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""This is the name of the model. It will be used to identify the model."""  
    subject_identifier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjectIdentifier'), 'exclude': lambda f: f is None }})
    r"""A random string that will replace the subject keyword at the time of inference. If not provided, a random string will be automatically generated."""  
    