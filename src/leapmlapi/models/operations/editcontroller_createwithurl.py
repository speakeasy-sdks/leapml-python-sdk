"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import editentity as shared_editentity
from dataclasses_json import Undefined, dataclass_json
from leapmlapi import utils
from typing import Optional


@dataclasses.dataclass
class EditControllerCreateWithURLSecurity:
    
    bearer: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditControllerCreateWithURLRequestBody:
    
    image_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUrl') }})
    r"""The url of the image to edit"""  
    prompt: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prompt') }})
    r"""A statement explaining what edit to perform to the image"""  
    image_guidance_scale: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageGuidanceScale'), 'exclude': lambda f: f is None }})
    r"""How much to weight the image guidance"""  
    seed: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seed'), 'exclude': lambda f: f is None }})
    r"""The seed to use for the random number generator"""  
    steps: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('steps'), 'exclude': lambda f: f is None }})
    r"""How many steps to take"""  
    text_guidance_scale: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textGuidanceScale'), 'exclude': lambda f: f is None }})
    r"""How much to weight the text guidance"""  
    webhook_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhookUrl'), 'exclude': lambda f: f is None }})
    r"""An optional URL to ping with the status when the edit is complete or failed"""  
    

@dataclasses.dataclass
class EditControllerCreateWithURLResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    edit_entity: Optional[shared_editentity.EditEntity] = dataclasses.field(default=None)
    r"""The newly created edit."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    