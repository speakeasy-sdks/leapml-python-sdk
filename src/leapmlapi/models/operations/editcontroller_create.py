"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import editentity as shared_editentity
from typing import Optional


@dataclasses.dataclass
class EditControllerCreateSecurity:
    
    bearer: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class EditControllerCreateRequestBodyFiles:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    files: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'files' }})  
    

@dataclasses.dataclass
class EditControllerCreateRequestBody:
    
    files: EditControllerCreateRequestBodyFiles = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The image to upload"""  
    prompt: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'prompt' }})
    r"""A statement explaining what edit to perform to the image"""  
    negative_prompt: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'negativePrompt' }})
    r"""A statement explaining what to avoid in the image"""  
    number_of_images: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'numberOfImages' }})
    r"""Number of images to generate"""  
    seed: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'seed' }})
    r"""The seed to use for the random number generator"""  
    steps: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'steps' }})
    r"""How many steps to take"""  
    webhook_url: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'webhookUrl' }})
    r"""An optional URL to ping with the status when the edit is complete or failed"""  
    

@dataclasses.dataclass
class EditControllerCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    edit_entity: Optional[shared_editentity.EditEntity] = dataclasses.field(default=None)
    r"""The newly created edit."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    